YUI Compressor 2.2.4, 2007-10-01
--------------------------------

+ Fixed the way quote characters are counted in string literals
  [SourceForge bug #1804576]
+ Do not use a regular expression using non-greedy matching to remove CSS
  comments (if the comment is more than 800 characters long or so, a stack
  overflow exception gets thrown) Instead, use good old parsing...
+ Fix unnecessary quote escaping in string literals.

YUI Compressor 2.2.3, 2007-09-28
--------------------------------

+ Transform </script into <\/script instead of replacing all </ into <\/.
+ Fixed bug related to the shortening of hexadecimal color codes (the string
  "1px solid #aabbcc" became "1px solid#abc", missing a required white space)
+ Added --preserve-strings option to specify that concatenated string literals
  should never be merged.
+ Do not convert \uXXXX and \xXX escape sequences to their unicode equivalent.

YUI Compressor 2.2.2, 2007-09-27
--------------------------------

+ Fixed regression related to the optimization of the amount of escaping
  in string literals and the concatenation of string literals.
+ Modified the Rhino tokenizer to handle JScript conditional comments
  natively (instead of hacking around the fact that Rhino is not keeping
  track of comments)
+ Transform </ into <\/ in string literals. This is especially useful if the
  code is written to a script block in an HTML document. This renders the old
  hack '<scr'+'ipt ...><'+'/script>' completely useless.
+ When converting decimal rgb color values to hexadecimal color values,
  prepend a '0' if the value is less than 16. Otherwise, rgb(0,124,114)
  for instance becomes #07c72, which is incorrect.
+ In CSS files, do not change color names into their corresponding color
  codes (and vice-versa) due to the high potential of introducing bugs
  (rolled back from 2.2.1)

YUI Compressor 2.2.1, 2007-09-25
--------------------------------

+ Optimize quote escaping in JavaScript string literals by using the best quote
  character (' or " depending on the occurrence of this character in the string)
+ Fixed minor bug in the CSS compressor. Colors should not be shortened in
      filter: chroma(color="#FFFFFF");
  Otherwise, it makes the filter break in Internet Explorer.
+ In CSS files, change color names into their corresponding color codes
  (and vice-versa) if that change yields any savings.

YUI Compressor 2.2, 2007-09-18
------------------------------

+ Don't obfuscate function argument named $super if it is the first function
  argument listed. This is to support Prototype 1.6's heretic implementation.
+ Added support for stdin/stdout (see README for more info)
+ Shorten colors from rgb(51,102,153) to #336699 in CSS files.
+ Shorten values from 0.8em to .8em in CSS files.
+ Added support for Internet Explorer's conditional comments in JavaScript
  files. Note that the presence of a conditional comment inside a function
  (i.e. not in the global scope) will reduce the level of compression for the
  same reason  the use of 'eval' or 'with' reduces the level of compression
  (conditional comments, which do not get parsed, may refer to local variables,
  which get obfuscated) In any case, the use of Internet Explorer's conditional
  comment is to be avoided.

YUI Compressor 2.1.2, 2007-08-31
--------------------------------

+ Added --preserve-semi option
+ Modified --line-break option

YUI Compressor 2.1.1, 2007-08-30
--------------------------------

+ Fixed missing space in CSS background:url('foo.png')no-repeat
  causing a background not to appear on Internet Explorer.

YUI Compressor 2.1, 2007-08-29
------------------------------

+ Pass the --line-break option to the CSS compressor.
+ Allow the output file to overwrite the input file (with version 2.0,
  in this case, the output file was always empty)
+ Remove spaces before and after '(' and ')' as in background:url('xxx');
+ Merge (if possible) string literals that are appended in JavaScript files.
  This not only makes the code smaller, it makes the code faster,
  but allows you to maintain some readability in your source code.
+ Handle constructs such as a + ++ b or a + + "1" (in which case the
  space between the operators must be kept!) and other similar cases...
+ Pass ErrorReporter instance to the constructor of class JavaScriptCompressor
  (as suggested by David Bernard for his integration  of the YUI Compressor
  as a maven plugin)

YUI Compressor 2.0, 2007-08-27
------------------------------

+ Switched from Rhino 1.6R6 to Rhino 1.6R7
+ Integrated Isaac Schlueter's CSS compressor.
+ Refactored code to make it easier to use the compressor from a servlet
  environment or another Java app (no need to pass in file names anymore)
+ Output a white-space character after 'throw' only when necessary.
+ Output a white-space character after 'break' and 'continue' when followed
  by a label.

YUI Compressor 1.1, 2007-08-20
------------------------------

+ Java source now in package com.yahoo.platform.yui.compressor
+ Added --line-break option that adds a line feed character after each
  semi-colon character (may help debugging with the MS Script debugger)
+ Added support for missing JavaScript features (get, set, const)
+ Do not show the entire stack trace when the input file cannot be found.
+ Removed the randomization of obfuscated symbols. When compressed code is
  checked in CVS, unchanged files would otherwise end up being versioned.
+ Added web-based front-end to the YUI Compressor as part of the dist package.
+ Added a public entry point that makes the YUI Compressor easy to integrate
  with an already existing Java application.
+ Simplified code by using the same parsing routines used to build the symbol
  tree while looking for undeclared symbols.
+ Count how many times each identifier is used, and display a warning when an
  identifier seems to be unused (code cannot safely be removed automatically)
+ Remove ';' when followed by a '}'. This yields an additional ~1.5% savings
  on yahoo-dom-event.js compared to the JSMin version.
+ Output a white-space character after 'return' and 'case' only when necessary.
